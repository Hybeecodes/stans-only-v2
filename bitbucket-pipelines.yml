image: node:13.12.0

# Workflow Configuration

pipelines:
  default:
    - parallel:
      - step:
          name: Build and Test
          caches:
            - node
          script:
            - npm install
            # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
      - step:
          name: Lint the node package
          script:
            # Run your linter of choice here
            - npm install eslint
            - npx eslint src
          caches:
            - node
  branches:
    dev:
      - parallel:
        - step:
            name: Build and Test
            caches:
              - node
            script:
              - apt-get update
              - apt-get install zip
              - npm install
              - npm run build
              - zip -r application.zip . -x node_modules/\* src/\* .git/\*
            artifacts:
              - application.zip
        - step:
            name: Security Scan
            script:
              # Run a security scan for sensitive data.
              # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
              - pipe: atlassian/git-secrets-scan:0.4.3
      - step:
          name: Deploy to Staging
          deployment: Staging
          # trigger: manual
          clone:
            enabled: false
          script:
            # sync your files to S3
            - pipe: atlassian/aws-elasticbeanstalk-deploy:1.0.2
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                APPLICATION_NAME: $STAGING_APP
                ENVIRONMENT_NAME: $STAGING_ENV_NAME
                S3_BUCKET: $S3_BUCKET
                ZIP_FILE: 'application.zip'
            # triggering a distribution invalidation to refresh the CDN caches
